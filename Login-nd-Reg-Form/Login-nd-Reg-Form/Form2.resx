<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAEAAf/2Q==
</value>
  </data>
</root>